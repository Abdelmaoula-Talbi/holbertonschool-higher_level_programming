==============================
How to use 2-matrix_divided.py
==============================

First import the module:

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Then use it:


Integers
********
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Floats
******
	>>> matrix = [[1, 2, 3.6], [4, 5.54, 6.30]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.2], [1.33, 1.85, 2.1]]

Rows with different lengths
***************************
	>>> matrix = [[1, 2, 3], [4, 5]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Negative numbers
****************
	>>> matrix = [[-1, 2, 3], [4, 5, -6]]
	>>> matrix_divided(matrix, 3)
	[[-0.33, 0.67, 1.0], [1.33, 1.67, -2.0]]

Strings
*******
	>>> matrix = [[1, 2, 3], [4, 5, "hello"]]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix with only one list
*************************
	>>> matrix = [[1, 2, 3]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0]]

None type
*********
	>>> matrix = [[1, 2, 3], None]
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable

Float('NaN')
************
	>>> matrix = [[1, 2, 3], [4, 5, float('nan')]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, nan]]

Overflow
********
	>>> matrix = [[1, 2, 3], [4, 5, 1e1000]]
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, inf]]

Type of div
***********
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, "hello")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 2.5)
	[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, [1, 2, 3])
	Traceback (most recent call last):
	TypeError: div must be a number

Division by zero
****************
	
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
	
